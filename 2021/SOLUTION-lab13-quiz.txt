# Review of Cache Behavior
Lecture and HW have discussed the behavior of simple Caches for Main Memory.  Our attention has focused on **Direct-Mapped Caches** where each block of Main Memory maps to only a single Cahce location. 

HW13 Problem 1 reviews such a case and further explores how such a cache improves the performance of linear scans through Main Memory such as when summing the contents of an array. Lab staff Demoers will walk through this problem to refresh your understanding of basic cache load semantics and also illustrate aggregate results such as total hits/misses. Demoers will primarily present information from the HW13 `QUESTIONS.txt` which includes memory tables, cache characteristics, and some C code. They will show show how to answer the inquiries there. For reference, HW13 is posted here:

https://www-users.cs.umn.edu/~kauffman/2021/hw13.html

Once you have a good grasp of HW13 Problem 1, answer the following questions about it:

Main Memory addresses in the problem are
(X)  8 bits / 1 byte big
( ) 16 bits / 2 bytes big
( ) 32 bits / 4 bytes big
( ) 64 bits / 8 bytes big

The numbers stored in Main Memory in the problem are arranged as follows:
( ) As an array of 1-byte characters
( ) As an array of 2-byte shorts
(X) As an array of 4-byte ints
( ) As an array of 8-byte longs

According to the cache statistics described in the problem, which of the following is true about the relation of numbers in Main Memory that will be copied to Cache lines?
( ) Cache sets are each 16-bytes big allowing 16 numbers to be held per set
( ) Cache sets are each 16-bytes big allowing  8 numbers to be held per set
(X) Cache sets are each 16-bytes big allowing  4 numbers to be held per set
( ) Cache sets are each 16-bytes big allowing  2 numbers to be held per set
( ) Cache sets are each 64-bytes big allowing 64 numbers to be held per set
( ) Cache sets are each 64-bytes big allowing 32 numbers to be held per set
( ) Cache sets are each 64-bytes big allowing 16 numbers to be held per set
( ) Cache sets are each 64-bytes big allowing  8 numbers to be held per set

The ending contents and state of the Cache in HW13 Problem 1 for strides of 1,2,3,4 is ...
( ) Different for each of these strides as different elements of Main Memory are accessed
( ) Strides 1 and 2 lead to the same ending Cache state/contents but the ending Cache state is different for strides 3 and 4
(X) The same for all of strides 1,2,3,4 as the same Cache blocks are loaded from Main Memory for all strides

The following best describes the Miss/Hit rate for each of the strides 1, 2, and 4 while executing the C code provided
( ) Stride 1: 3 Hits Per 1 Miss; Stride 2: All Misses 1 Miss; Stride 4: All Misses
( ) Stride 1: 3 Hits Per 1 Miss; Stride 2: 2 Hits per 1 Miss ; Stride 4: 1 Hit per 1 Miss
(X) Stride 1: 3 Hits Per 1 Miss; Stride 2: 1 Hit per 1 Miss; Stride 4: All Misses
( ) Stride 1: 8 Hits Per 1 Miss; Stride 2: 4 Hits per 1 Miss; Stride 4: 2 Hits per 1 Miss
